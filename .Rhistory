#5
a <- c(1,2,3,4)
b <- c("red", "white", "red", NA)
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
typeof(mydata[3][1])
typeof(mydata[[1]][1])
typeof(mydata[[1]][])
arr <- array(c(vector, vector2))
list3 <- c(9,10,11,12)
#5
list1 <- c(1,2,3,4)
list2 <- c(5,6,7,8)
list3 <- c(9,10,11,12)
arr <- array(c(list1, list2, list3))
arr
arr2 <- array(c(vector, vector2),dim=c(4,3)) #
arr2 <- array(c(list1, list2, list3),dim=c(4,3)) #
arr2
#5
list1 <- c(c(1,2),c(3,4))
list1
#5
list1 <- c(1,2,3,4)
list2 <- c(5,6,7,8)
list3 <- c(9,10,11,12)
arr2 <- array(c(list1, list2, list3),dim=c(2,2,2)) #
arr2
#5
list1 <- c(1,2,3,4)
list2 <- c(5,6,7,8)
arr <- array(c(list1, list2, list3),dim=c(2,2,2)) #
array(c(list1,list2))
#5
a <- c(1,2,3,4)
b <- c("red", "white", "red")
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
b <- c("red", "white", "red", NA)
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
typeof(mydata[[1]][])
mydata[[1]][]
#4
example2 <- function(x){
"
comment for block
for multiple
lines of code
"
return(typeof(x))
}
#3
example <- function(x){
return(class(x))
}
#5
a <- c(1,2,3,4)
b <- c("red", "white", "red", NA)
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
names(mydata) <- c("ID","Color","Passed") # variable names
mydata
mydata[0]
a[0]
a[0]
a[1]
a[0]
a[]
a
b[0]
data <- data.frame(a)
data
data[0]
mydata[0]
c[0]
b[0]
mydata[1]
mydata[2]
is.logical(TRUE) #  return false
is.logical(2) #  return false
#Heterogeneous data frame example
a <- c(1,2,3,4)
b <- c("red", "white", "red", NA)
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
#Array and data frame Indexing example.
mydata[0]
mydata[1]
mydata[2]
typeof(mydata[[1]][])
#exmaple of type cheking funtion
example <- function(x){
return(class(x))
}
eaxmple(1)
example(1)
#block commenting example
example2 <- function(x){
"
comment for block
for multiple
lines of code
"
return(typeof(x))
}
example(1)
#data type example
is.integer(3)# check whether integer
is.integer(3L)# adding "L" to numeric will change the data type to Integer
is.logical(2) # return false
is.logical(TRUE) #  return true
#homogeneous array example
list1 <- c(1,2,3,4)
array(c(list1,list2))
list2 <- c(5,6,7,8)
array(c(list1,list2))
arr <- array(c(list1, list2),dim=c(2,2,2)) # 2X2X2 dimensional array
#Heterogeneous data frame example
a <- c(1,2,3,4)
b <- c("red", "white", "red", NA)
c <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(a,b,c)
names(mydata) <- c("ID","Color","Passed") # variable names
#Array and data frame Indexing example.
mydata[0]
mydata[1]
mydata[2]
typeof(mydata[[1]][])
#exmaple of type cheking funtion
example <- function(x){
return(class(x))
}
setwd("/Users/Ye/Dropbox/Project/Deodorant")
#it will be different for all other computers (for Mac)
setwd("~/Dropbox/Project/Deodorant")
#it will be different for all other computers (for Mac)
setwd("~/Dropbox/Project/Deodorant")
"
if it was not successful, getwd() command will help you
figure out what directory you are woking on right now
"
#it will be different for all other computers (for Mac)
setwd("~/Dropbox/Project/Deodorant")
getwd()
#it will be different for all other computers (for Mac)
setwd("/Users/yeram/Dropbox/Project/Deodorant")
#it will be different for all other computers (for Mac)
setwd("/Users/yeram")
#it will be different for all other computers (for Mac)
setwd("/Users/yeram/Dropbox/Projects/Deodorant")
#change the directory according to your pc
originaldata <- read.csv("test_data.csv", header = TRUE)
#change the directory according to your pc
originaldata <- read.csv("data/test_data.csv", header = TRUE)
#change the directory according to your pc
originaldata <- read.csv("datafiles/test_data.csv", header = TRUE)
#change the directory according to your pc
originaldata <- read.csv("rawdata.csv", header = TRUE)
originaldata
#change the directory according to your pc
originaldata <- read.csv("rawdata.csv", header = TRUE)
#grouping by product
productA = subset(df, df[,"product"] == "Deodorant B")
#Cleaning up data for better visuals on what is what,and only storing what I think is important.
#Giving header names for each column.
df = originaldata[,c(3,4,6,31,43,44,47,48,51,52,53,54,55)]
View(df)
#grouping by product
productA = subset(df, df[,"product"] == "Deodorant B")
#grouping by product
productA = subset(df, df[,"product"] == "Deodorant B")
colnames(df) <- c("product","opinion","strength","addictive","willbuy","preferred","after30min","overall","ethnicity","education","income","marital","working")
df
library(ggplot2)
library(MASS)
